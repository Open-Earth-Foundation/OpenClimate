##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	client_max_body_size 10M;

	listen 80;
	listen [::]:80;

	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;

	ssl_protocols       TLSv1.2;
	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
        ssl_certificate     /etc/nginx/ssl/my-site.com.crt;
        ssl_certificate_key /etc/nginx/ssl/my-site.com.key;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/ui;

	charset UTF-8;

	index index.html index.htm;

	server_name localhost;

	location /api/admin/ws {
		allow all;

		proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_http_version 1.1;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_set_header Host $host;
	        proxy_pass http://hub-api:3100;
	        proxy_read_timeout 60m;
	        proxy_send_timeout 60m;
	}

	location /api/anon/ws {
		allow all;

		proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_http_version 1.1;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_set_header Host $host;
	        proxy_pass http://hub-api:3100;
	        proxy_read_timeout 60m;
	        proxy_send_timeout 60m;
	}

	location /api {
		allow all;

		alias /var/www/api/web;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri @api;
	}

	location @api {
		allow all;

	        proxy_http_version 1.1;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_set_header Host $host;
	        proxy_pass http://hub-api:3100;
	}

	# UI PATHS
	location / {
		allow all;

		# For development we proxy the ui requests
	        proxy_http_version 1.1;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_set_header Host $host;
	        proxy_pass http://hub-ui:3000;
	}

	location /sockjs-node {
		allow all;

		proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_http_version 1.1;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_set_header Host $host;
	        proxy_pass http://hub-ui:3000;
	}

	# deny access to . files
	location ~ /\. {
		deny all;
	}

	deny all;


}


